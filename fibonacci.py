'''
calculates fibonacci sequence
both naively (recursion) and memoizing (dynamic prog.)
'''

fib_list = [
    0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597,
    2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418,
    317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465,
    14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296,
    433494437, 701408733, 1134903170, 1836311903, 2971215073, 4807526976,
    7778742049, 12586269025, 20365011074, 32951280099, 53316291173,
    86267571272, 139583862445, 225851433717, 365435296162, 591286729879,
    956722026041, 1548008755920, 2504730781961, 4052739537881, 6557470319842,
    10610209857723, 17167680177565, 27777890035288, 44945570212853,
    72723460248141, 117669030460994, 190392490709135, 308061521170129,
    498454011879264, 806515533049393, 1304969544928650, 2111485077978050,
    3416454622906700, 5527939700884750, 8944394323791460, 14472334024676200,
    23416728348467600, 37889062373143900, 61305790721611500, 99194853094755400,
    160500643816367000, 259695496911122000, 420196140727489000,
    679891637638612000, 1100087778366100000, 1779979416004710000,
    2880067194370810000, 4660046610375530000, 7540113804746340000,
    12200160415121800000, 19740274219868200000, 31940434634990000000,
    51680708854858300000, 83621143489848400000, 135301852344706000000,
    218922995834555000000
]


def fib_rec(n: int) -> int:
    if n < 2:
        return n
    else:
        return fib_rec(n - 1) + fib_rec(n - 2)


for i in range(0, 20):
    print(fib_rec(i))
    assert fib_list[i] == fib_rec(i)
